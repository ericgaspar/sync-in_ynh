server:
  # default host : 0.0.0.0
  host: 127.0.0.1
  # default port : 8080
  port: __PORT__
  # workers: auto (use all cpus) | number
  # regardless of the value, starts with at least 2 workers, 1 worker is dedicated to scheduled tasks
  workers: 4
  # trust proxy: true | false | 127.0.0.1,192.168.1.1/24
  trustProxy: false
  # restartOnFailure : automatically restart workers if they are killed or die
  restartOnFailure: true
logger:
  # level: trace | debug | info | warn | error | fatal
  level: info
  # stdout : if false logs are written to the run directory (default: true)
  stdout: true
  # colorize output
  colorize: true
mysql:
  url: mysql://__DB_USER__:__DB_PWD__@localhost:3306/__DB_NAME__
  logQueries: false
cache:
  # adapter: mysql (default) | redis (requires optional dependency: redis)
  adapter: mysql
  # default ttl in seconds
  ttl: 60
  # redis adapter url
  redis: redis://127.0.0.1:6379
websocket:
  # adapter: cluster (Node.js Workers: default) | redis (requires optional dependency: @socket.io/redis-adapter)
  adapter: cluster
  # cors origin allowed
  corsOrigin: '*'
  # redis adapter url
  redis: redis://127.0.0.1:6379
mail:
  host: "localhost"
  port: 25
  sender: 'Sync-in<notification@sync-in.com>'
  auth:
    user: "__APP__"
    pass: "__MAIL_PWD__"
  # secure: defines if the connection should use SSL (if true) or not (if false)
  secure: false
  # enable logger
  logger: false
  # set log level to debug
  debug: false
auth:
  # adapter : mysql (default) | ldap
  method: ldap
  # sameSite (cookie settings) : lax | strict
  sameSite: strict
  token:
    access:
      name: sync-in-access
      # used for token & cookie signatures
      secret: changeAccessWithStrongSecret
      expiration: 30m
      cookieMaxAge: 30m
    refresh:
      name: sync-in-refresh
      # used for token & cookie signatures
      secret: changeRefreshWithStrongSecret
      expiration: 4h
      cookieMaxAge: 4h
  ldap:
    # e.g: [ldap://localhost:389, ldaps://localhost:636] (array required)
    servers: [ldap://localhost:389]
    # baseDN: distinguished name, e.g: (ou=people,dc=ldap,dc=sync-in,dc=com)
    baseDN: ou=users,dc=yunohost,dc=org
    # filter, e.g: (acl=admin)
    filter: (&(objectclass=top)(memberUid=*))
    # login attribute: uid (default) or mail
    loginAttribute: uid
applications:
  files:
    dataPath: __DATA_DIR__
    # Default to 5 GB if not specified
    maxUploadSize: 5368709120
    onlyoffice:
      enabled: false
      # for an external server (e.g: https://onlyoffice.domain.com), remember the url must be accessible from browser !
      # if externalServer is empty (case of official docker compose), we use the local instance
      externalServer:
      # secret used for jwt tokens, it must be the same on the onlyoffice server
      secret: onlyOfficeSecret
      # if you use https, set to true
      verifySSL: false
  appStore:
    # repository: public (default) | local
    repository: public
